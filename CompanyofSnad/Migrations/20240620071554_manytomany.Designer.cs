// <auto-generated />
using CompanyofSnad.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyofSnad.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20240620071554_manytomany")]
    partial class manytomany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyofSnad.Models.Employedetailes", b =>
                {
                    b.Property<int>("EmployedetailesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployedetailesId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Employeid")
                        .HasColumnType("int");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployedetailesId");

                    b.HasIndex("Employeid")
                        .IsUnique();

                    b.ToTable("Employedetailes");
                });

            modelBuilder.Entity("CompanyofSnad.Models.Employes", b =>
                {
                    b.Property<int>("EmployeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeId"));

                    b.Property<string>("EmployeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("EmployeId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("CompanyofSnad.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("CompanyofSnad.Models.Employedetailes", b =>
                {
                    b.HasOne("CompanyofSnad.Models.Employes", "Employes")
                        .WithOne("Employedetailes")
                        .HasForeignKey("CompanyofSnad.Models.Employedetailes", "Employeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employes");
                });

            modelBuilder.Entity("CompanyofSnad.Models.Employes", b =>
                {
                    b.HasOne("CompanyofSnad.Models.Manager", "Manager")
                        .WithMany("Employes")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("CompanyofSnad.Models.Employes", b =>
                {
                    b.Navigation("Employedetailes")
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyofSnad.Models.Manager", b =>
                {
                    b.Navigation("Employes");
                });
#pragma warning restore 612, 618
        }
    }
}
