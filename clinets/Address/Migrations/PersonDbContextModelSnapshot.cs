// <auto-generated />
using Address.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Address.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    partial class PersonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Address.Model.Addressdata", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Addressdata");
                });

            modelBuilder.Entity("Address.Model.Departement", b =>
                {
                    b.Property<int>("DepatemntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepatemntId"));

                    b.Property<string>("DepatemntName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepatmentType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepatemntId");

                    b.ToTable("Dept", (string)null);
                });

            modelBuilder.Entity("Address.Model.Persondata", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Pname");

                    b.HasKey("PersonId");

                    b.ToTable("Persondata");
                });

            modelBuilder.Entity("Address.Model.Addressdata", b =>
                {
                    b.HasOne("Address.Model.Persondata", "Persondata")
                        .WithOne("Addressdata")
                        .HasForeignKey("Address.Model.Addressdata", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persondata");
                });

            modelBuilder.Entity("Address.Model.Persondata", b =>
                {
                    b.Navigation("Addressdata");
                });
#pragma warning restore 612, 618
        }
    }
}
